<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bananice.user.mapper.LogininfoMapper">
    <!--保存对象-->
    <insert id="save" parameterType="Logininfo" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into logininfo(username,
                              phone,
                              email,
                              salt,
                              password,
                              state,
                              type)
        values (#{username},
                #{phone},
                #{email},
                #{salt},
                #{password},
                #{state},
                #{type})
    </insert>
    <!--删除对象-->
    <delete id="delete" parameterType="long">
        delete
        from logininfo
        where id = #{id}
    </delete>

    <!--更新对象-->
    <update id="update" parameterType="Logininfo">
        update logininfo
        set username = #{username},
            phone    = #{phone},
            email    = #{email},
            salt     = #{salt},
            password = #{password},
            state    = #{state},
            type     = #{type}
        where id = #{id}
    </update>
    <!--加载对象-->
    <select id="loadById" resultMap="BaseResultMap" parameterType="long">
        select *
        from logininfo
        where id = #{id}
    </select>
    <!--加载所有对象-->
    <select id="loadAll" resultMap="BaseResultMap">
        select *
        from logininfo
    </select>
    <!--//查询总数=参数（查询对象），返回值：Integer-->
    <select id="queryCount" parameterType="LogininfoQuery" resultType="Integer">
        select count(*) from logininfo
        <include refid="whereSql"/>
    </select>
    <!--//查询当前页数据=参数（查询对象），返回值:List-->
    <select id="queryData" parameterType="LogininfoQuery" resultType="Logininfo">
        select * from logininfo
        <include refid="whereSql"/>
        limit #{begin},#{pageSize}
    </select>


    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (name like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>

    <!--//批量删除-->
    <delete id="bulkRemove" parameterType="arraylist">
        delete from logininfo where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.bananice.user.domain.Logininfo">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="salt" property="salt"/>
        <result column="password" property="password"/>
        <result column="state" property="state"/>
        <result column="type" property="type"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        username, phone, email, salt, password, state, type
    </sql>

    <!--Logininfo loadByAccountAndType(@Param("account") String account,@Param("type") String type)-->
    <select id="loadByAccountAndType" resultType="Logininfo">
        select * from logininfo where (username=#{account} or phone=#{account} or email=#{account}) and type=#{type}
    </select>

    <!--Logininfo loadByUserId(Long userId);-->
    <select id="loadByUserId" resultMap="BaseResultMap">
        select l.* from user u join logininfo l on u.logininfo_id=l.id where u.id=#{userId}
    </select>

    <!--void updateStateById(@Param("id") Long logininfoId, @Param("state") boolean state);-->
    <update id="updateStateById">
        update  logininfo set state=#{state} where id=#{id}
    </update>

</mapper>
